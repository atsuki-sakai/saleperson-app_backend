steps:
  # 1. Docker イメージのビルド (linux/amd64 への明示的なビルド)
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--platform'
      - 'linux/amd64'
      - '-t'
      - 'gcr.io/saleperson-app/salesperson-backend:$COMMIT_SHA'
      - '.'
    id: 'build-app'

  # 2. イメージをプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/saleperson-app/salesperson-backend:$COMMIT_SHA'
    id: 'push-image'
    waitFor: ['build-app']

  # 3. Cloud Runへのデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'salesperson-backend'
      - '--image'
      - 'gcr.io/saleperson-app/salesperson-backend:$COMMIT_SHA'
      - '--region'
      - 'asia-northeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - 'saleperson-app:asia-northeast1:saleperson-app-db'
      - '--service-account'
      - 'salesperson-backend-sa@saleperson-app.iam.gserviceaccount.com'

      # Secret Managerの `db-password` を環境変数 DB_PASSWORD に注入
      - '--set-secrets'
      - 'DB_PASSWORD=db-password:latest'

      # 他の環境変数 (プロジェクトID や DB名 など)
      - '--set-env-vars'
      - 'NODE_ENV=production,PROJECT_ID=saleperson-app,DB_NAME=saleperson-app-db'
    id: 'deploy'
    waitFor: ['push-image']

timeout: '1800s'

images:
  - 'gcr.io/saleperson-app/salesperson-backend:$COMMIT_SHA'

options:
  logging: 'CLOUD_LOGGING_ONLY'
  machineType: 'N1_HIGHCPU_8'
